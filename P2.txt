23/04/18 (11:00 to 1:00)
--------
Complete architecture
Technoloies going use.

Requirement document


will share through git hub.


Assignment
-----------
1)Read the requirement document - multiple times
2)doubts - discuss
3)You supposed to design yourself.
	a)What you understood
	b)Who are the users of this project
		i)Internal User/External Users
	c)What are the modules (single/two word)
	d)Table structure
	e)TestCases Document (Excel Sheet)

Fill these templates

Templates
----------
1)BRD(Business Requirement Document)
2)Design Document
3)Testcase Document.



24/04/18
--------
Data binding
-------------

<input type = "text" name ="userID">
Whatever you type in text field - will assinged to userID - One way
Whatever the value there in the name -should display in text field


${userID}->the value of userId will display in the ui

$Scope -  we can achieve two way data binding.


Directives
----------
ng-app
ng-model
ng-bind
{{}}


<html ng-app="">
{{10+20}}

</html>

25/04/18
-------
Assignment
-----------
1)Please read the requirements
2)Fill the Templates
3)Learn Angular JS


Yesterday
---------
1)Architecture
2)SPA
3)Two way binding
4)Angular Directive - ng-app


Today
-------
Give some examples using basic ng directives


ng-bind ==== {{}}

NaN -> Not a Number
ng-init -> initialize a variable



ng-XXX  Vx data-ng-XX
-----------------------
WFF ->Well Formed Formula
-will give warning if you use ng-XXX



JSON Object
------------
JSON -> Java Script Object Notation  - it is string

<div ng-app="" ng-init="
emp ={

'id' : '101',
'name' : 'Sathisj',
'salary' : '50000',
'mobile' : '98824432'

}

">
Employee id :{{emp.id}}  <br>
Employee id :{{emp.name}}<br>
Employee id :{{emp.salary}}<br>
Employee id :{{emp.mobile}}<br>

How can we refer individual field/property
{{emp.id}}


JSONArray - Array of JSON Object



employees = 
[

{'id' : '101'  ,  'name' :  ' Noorie ahmed',  'salary' : '30000'  },
Mu
{'id' : '102'  ,  'name' :  ' Mula Sukanya',  'salary' : '40000'  },

{'id' : '103'  ,  'name' :  ' Abhishek',  'salary' : '50000'  },


]

How can you display  ( need to use loops )
*ngFor - Angular 5
ngRepeate - Angular 1.X

<div ng-app="" ng-init="
employees = 
[

{'id' : '101'  ,  'name' :  ' Noorie ahmed',  'salary' : '30000'  },

{'id' : '102'  ,  'name' :  ' Mula Sukanya',  'salary' : '40000'  },

{'id' : '103'  ,  'name' :  ' Abhishek',  'salary' : '50000'  }
]

">
  <p>Looping with ng-repeat:</p>
  <ul>
    <li ng-repeat="e in employees">
      {{ e.id +  " "  +  e.name + " " +  e.salary }}
    </li>
  </ul>
</div>



26/04/18
---------
Modules and Controllers.


Tables
------
Master tables  - will not change frequently
	Ex:  Branch,  Department
Transactional Tables - will change frequently
        Ex:  Student,  Employee

Parent Table: Branch,  Department
Child Table  :  Student,  Employee

References/Foriengn key(  1-to-many)

Job - JobApplication ( many-tomany)
N number of students can apply for the same job. (many-to-one)
A student can apply more than one job (1 - to - many)
many-to-many

Assignment
----------
Please identify the fields of other tables
and do gap analysis.


Angular JS
------------
Directives with examples

Today:
------
Module
------
<html ng-app="myApp" ng-controller="UserController">
{{name}}
</html>

var app = angular.module("myApp",[]);

Controller
----------
app.controller("UserController",function($scope)

{

$scope.name = "Sachin";

}


)

Example:
---------
<div ng-app="myApp" ng-controller="empCtrl">

Emp ID :    {{emp.id}}  <br>
Emp Name :    {{emp.name}}  <br>
Emp Salary :    {{emp.salary}}  <br>

</div>

<script>
var app = angular.module("myApp", []);


app.controller("empCtrl", function($scope) {

 $scope.emp = {
 "id" : "EMP005",
 "name": "Jaskaran",
 "salary": "360000"
  
 }
  
});
</script>
------------






 
$scope -- Model / ModelAndView





Different types of languages
----------------------------
1)Strctural  -  COBOL
2)Procedural  - c
3)Object Oriented = C++, Java
4)Functional = Java script , Java(from 1.7 version onwards)
		lamda expression  ( -> )

A function can be assigned to a variable
and can call the function with using this variable.


var sum  =  add(int x, int y)
{
   return x+y;

}

//how can you call this function?

sum(10,20)

Example controller + with function - two way binding
----------------------------------------------------
<div ng-app="myApp" ng-controller="personCtrl">

First Name: <input type="number" ng-model="x"><br>
Last Name: <input type="number" ng-model="y"><br>
<br>
 {{message}}  : {{sum()}}

</div>

<script>
var app = angular.module('myApp', []);
app.controller('personCtrl', function($scope) {
   
    $scope.message = " The total is" ;
    $scope.sum = function() {
        return $scope.x  + $scope.y;
    };
});
</script>
----------------------------------------------------


27/04/18
--------
Yesterday
---------
1)Design document
	a)Identified all the modues
	b)Identified all the tables
	c)Identified fields for User Table
        d)Angular Controllers

Today
-----
1)Design - Identify fields of other tables
	
	Identified fields of Bulletin, Job and JobApplication
	-GAP Analysis

2)filters, services(http)



searching for the job using filter
---------------------------------
<body>

<div ng-app="myApp" ng-controller="namesCtrl">

<input type="text" ng-model="searchValue"

<ul>
  <li ng-repeat="job in jobs | filter: searchValue ">
    {{ job.title + ', ' + job.salary }}
  </li>
</ul>

</div>

<script>
angular.module('myApp', []).controller('namesCtrl', function($scope) {
    $scope.jobs = [
          { title : "Technical Lead", salary: 10000},
           { title : "Technical Architect", salary: 50000},
            { title : "Technical Manager", salary: 40000},
             { title : "Programmer", salary: 2000},
       
        ];
});
</script>

</body>
------------------------------------



30/04/18
--------
This week agenda
----------------
1)Start working on Backend project
2)Designment Documents
3)Learning Angular JS


Today
-----
1)Start working on Backend project
	a)Download Oralce 11G Expression Edition.- DONE
	b)Create the table  - DONE
	c)create maven quick start project  - DONE
	d)hibernate configuration - ApplicationContextConfig  - DONE
	e)Create Domain Objects - DONE
	f)Create DAO - Interfaces and DAOImpls - implementation classes
	g)Write JUnit Testcases for each DAOImpl


Backend Project
---------------
1)Maven-quick start - Configuration _  DAO/DAOImpl
2)Spring Boot - 
	a)Less Configuration
		i)ApplicatinoContextConfg - not required
		ii)Using properties file
			application.properties
                        ----------------------
			driver.name = OracleDriver
			user = system
			password = root
			---------------------------
	d)Embedded Server  (no need to use external server)
	note:  You need to write main method - you can run as
			java application
3)Spring Repository
	a)You no need to write DAOImpl


7 weeks project
----------------
1 - week is done.



Installing Oracle driver manually
---------------------------------

mvn install:install-file 
-Dfile=C:/oraclexe/app/oracle/product/11.2.0/server/jdbc/lib/ojdbc6.jar 
-DgroupId=com.oracle 
-DartifactId=ojdbc6 
-Dversion=11.2.0 
-Dpackaging=jar

path/to/ojdbc6.jar ->  After downloading Oracle Express Edition 


password for oracle :  root
userid :  system

Schema name - colldb

c_user table in oracle
----------------------
create table c_user(
emailid varchar2(20) primary key,
password varchar2(20) not null,
name varchar2(30) not null,
details varchar2(100),
role char default 'S',
status char default 'N',
reason varchar2(100)

)




Cascade on delete
-----------------

create table c_job
(
id number primary key,
title varchar2(20)not null,
description varchar2(100),
qualification varchar2(20),
salary number,
status char(10) default 'O',
no_of_openings number,
date_posted date default sysdate

)

create table c_job_application
(
id number primary key,
emaildID varchar2(20) references user(id) cascase on delete,
                                           // on delete set null




Tomorrow : There is no session;
compensation....5/5/18 - we have class on this saturday


Assingment
----------
create other tables
create other domain classes + DAO + DAOImpl + Testcases







Errors
-------
org.hibernate.LazyInitializationException: 
could not initialize proxy - no Session


03/05/18
--------
1)Yesterday:

written few testcases for user module

2)Today:

Write other testcases for user module
Start another module - job 
1)create the table  -DONE
2)create Domain object - DONE
3)Create DAO Interface and DAOImpl
4)JUnit Testcases


create table c_job
(
id int primary key,
title varchar2(30) not null,
description clob not null,
qualification varchar2(20) not null,
salary int not null,
status char default 'O',
no_of_openings int,
posted_date date default sysdate
)



create table c_job_application
(
id int primary key,
emailID varchar2(20) references c_user(emailID),
jobID int references c_job(id),
applied_date date not null,
status char default 'N',
reason varchar2(100)
)







connecting to oracle db server
-------------------------------

1)  Expression edition UI

OR

2) Through command prompt
	a)Windows->start -> Run SQL Command line
	b)conn username/password
		i)conn coldb/root
	c)select * from tab;   //to know what are all tables exist
				(syste defined + user defined)
	




04/05/18
----------

Today
-----
JobDAO Testcases


Sequence generation
-------------------
1)In DB, you can create seqeuence
	create sequence sequance_name
	(
            min =1, max=100000, step=1, cycle, cashe
	)
2)Hibernate 
3)

	i)Java - random number

	random number -> range of the random number?
	-> 0 to 1 -- need t convert into int/long
        ii)check what is id of last record (max value)
            add + 1 before saving this record.




Aggregate functions
--------------------
max, min, avg, sum, count


05/05/18
-------
Yeterday:   Job Testcases/JobApplication Test Cases

1)We should not able to apply for Job which is already closed.


2)We should not apply for the same job more than once.




Next week :  Spring Rest Services - separate project
	Integrating with Back end project



OOP
---
data hiding - access specifier + class
abstraction - hiding implementation - can achieve using interface/abstract class
Why should hide implementation?
--they no need to how we implemented
--polymorphism (different implementation)

In our project
--------------
1)created backend project (DAO and DAO Implementation are exist)
2)going to create spring rest services project.


Blog table
----------
create table c_blog
(
id int primary key,
title varchar2(100) not null,
emailID varchar2(20) references c_user(emailID),
description clob not null,
createdDate date default sysdate,
status     char default 'N',
remarks    char null,
likes      int default 0,
unlikes    int default 0
)

BlogComment
-----------
create table c_blog_comment
(
id int primary key,
emailID varchar2(20) references c_user(emailID),
blogID int  references c_blog(id),
comments clob not null,
commentedDate date default sysdate
)

08/05/18
---------
Yesterday :  discussed about webservices

Today:
create webservice and test

1)create maven-weba-app project
2)create RestController
3)Test through postman/restclient (Addons/pluggins in browser)





ResponseEntity -> To return the data +  Http status codes - to client

status code --- status message
------------------------------
404         -- page not found
200          -- success (httpstatus.ok)



Parsers
--------
convert one format to another format
Ex:  JAXB ->  Java APLI for XML Binding

json  <--> java

1)gson
2)jaskson

1)jackson data bind
2)jackson core


09/05/18
--------
Yesterday:
1)created maven-web-app proect
2)created rest controller - user
3)we tested through postman


Today:
1)write other method handler in user controller
2)Test it.


@PostMapping("/user/create")
public ResponseEntity<User> createUser(@RequestBody User user)
{



}





Serializable  -  
-------------
The objects data will move from one layer to other layer
-we should store/persist in aflie

How many types of iterfaces in java? and what is the use?

1)Marker interface
	-which does not have any method declarations
        Interface InterfaceName
        {
	}
	Example : Serializable,Clonable

2)Functional interface
	-which has only one method
	Ex:
	Runnable   - method run
	

3)Interface with default implementation


Question:  How to know the Class name if you only instance name?

j

1)  if( j instance of JobApplication)
2) j.getClass


There are so many classes are there, we need serialize only few classes
Model,  DAO, DAOImpl, Controller

JVM will serialize only the class which implements Serialization
How JVM will know?

public Class User implements Serialization {}
User u = new User

if( u instance of Serialization)
{

 // will serialize or store in file
}





















Copy
----
1)Deep Copy  - All the properties of one object will copy to other object
2)Shallow Copy - Both the object names will copy to same location



10/05/18
---------
Job modules


1)whenever we try to delete a job, if somebody already applied for
	the job, we should not able to delete.

2)if the user already applied for any job(s), we should not
	able to delete the user.

































































































































































































































































