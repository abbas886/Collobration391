23/04/18 (11:00 to 1:00)
--------
Complete architecture
Technoloies going use.

Requirement document


will share through git hub.


Assignment
-----------
1)Read the requirement document - multiple times
2)doubts - discuss
3)You supposed to design yourself.
	a)What you understood
	b)Who are the users of this project
		i)Internal User/External Users
	c)What are the modules (single/two word)
	d)Table structure
	e)TestCases Document (Excel Sheet)

Fill these templates

Templates
----------
1)BRD(Business Requirement Document)
2)Design Document
3)Testcase Document.



24/04/18
--------
Data binding
-------------

<input type = "text" name ="userID">
Whatever you type in text field - will assinged to userID - One way
Whatever the value there in the name -should display in text field


${userID}->the value of userId will display in the ui

$Scope -  we can achieve two way data binding.


Directives
----------
ng-app
ng-model
ng-bind
{{}}


<html ng-app="">
{{10+20}}

</html>

25/04/18
-------
Assignment
-----------
1)Please read the requirements
2)Fill the Templates
3)Learn Angular JS


Yesterday
---------
1)Architecture
2)SPA
3)Two way binding
4)Angular Directive - ng-app


Today
-------
Give some examples using basic ng directives


ng-bind ==== {{}}

NaN -> Not a Number
ng-init -> initialize a variable



ng-XXX  Vx data-ng-XX
-----------------------
WFF ->Well Formed Formula
-will give warning if you use ng-XXX



JSON Object
------------
JSON -> Java Script Object Notation  - it is string

<div ng-app="" ng-init="
emp ={

'id' : '101',
'name' : 'Sathisj',
'salary' : '50000',
'mobile' : '98824432'

}

">
Employee id :{{emp.id}}  <br>
Employee id :{{emp.name}}<br>
Employee id :{{emp.salary}}<br>
Employee id :{{emp.mobile}}<br>

How can we refer individual field/property
{{emp.id}}


JSONArray - Array of JSON Object



employees = 
[

{'id' : '101'  ,  'name' :  ' Noorie ahmed',  'salary' : '30000'  },
Mu
{'id' : '102'  ,  'name' :  ' Mula Sukanya',  'salary' : '40000'  },

{'id' : '103'  ,  'name' :  ' Abhishek',  'salary' : '50000'  },


]

How can you display  ( need to use loops )
*ngFor - Angular 5
ngRepeate - Angular 1.X

<div ng-app="" ng-init="
employees = 
[

{'id' : '101'  ,  'name' :  ' Noorie ahmed',  'salary' : '30000'  },

{'id' : '102'  ,  'name' :  ' Mula Sukanya',  'salary' : '40000'  },

{'id' : '103'  ,  'name' :  ' Abhishek',  'salary' : '50000'  }
]

">
  <p>Looping with ng-repeat:</p>
  <ul>
    <li ng-repeat="e in employees">
      {{ e.id +  " "  +  e.name + " " +  e.salary }}
    </li>
  </ul>
</div>



26/04/18
---------
Modules and Controllers.


Tables
------
Master tables  - will not change frequently
	Ex:  Branch,  Department
Transactional Tables - will change frequently
        Ex:  Student,  Employee

Parent Table: Branch,  Department
Child Table  :  Student,  Employee

References/Foriengn key(  1-to-many)

Job - JobApplication ( many-tomany)
N number of students can apply for the same job. (many-to-one)
A student can apply more than one job (1 - to - many)
many-to-many

Assignment
----------
Please identify the fields of other tables
and do gap analysis.


Angular JS
------------
Directives with examples

Today:
------
Module
------
<html ng-app="myApp" ng-controller="UserController">
{{name}}
</html>

var app = angular.module("myApp",[]);

Controller
----------
app.controller("UserController",function($scope)

{

$scope.name = "Sachin";

}


)

Example:
---------
<div ng-app="myApp" ng-controller="empCtrl">

Emp ID :    {{emp.id}}  <br>
Emp Name :    {{emp.name}}  <br>
Emp Salary :    {{emp.salary}}  <br>

</div>

<script>
var app = angular.module("myApp", []);


app.controller("empCtrl", function($scope) {

 $scope.emp = {
 "id" : "EMP005",
 "name": "Jaskaran",
 "salary": "360000"
  
 }
  
});
</script>
------------






 
$scope -- Model / ModelAndView





Different types of languages
----------------------------
1)Strctural  -  COBOL
2)Procedural  - c
3)Object Oriented = C++, Java
4)Functional = Java script , Java(from 1.7 version onwards)
		lamda expression  ( -> )

A function can be assigned to a variable
and can call the function with using this variable.


var sum  =  add(int x, int y)
{
   return x+y;

}

//how can you call this function?

sum(10,20)

Example controller + with function - two way binding
----------------------------------------------------
<div ng-app="myApp" ng-controller="personCtrl">

First Name: <input type="number" ng-model="x"><br>
Last Name: <input type="number" ng-model="y"><br>
<br>
 {{message}}  : {{sum()}}

</div>

<script>
var app = angular.module('myApp', []);
app.controller('personCtrl', function($scope) {
   
    $scope.message = " The total is" ;
    $scope.sum = function() {
        return $scope.x  + $scope.y;
    };
});
</script>
----------------------------------------------------





























































